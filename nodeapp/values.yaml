replicaCount: 1

image:
  # repository: trydocker123/node-app
  repository: docker.io/library/node-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  env:
    name: 'REDIS_URL'
    value: 'node-app-chart-redis-master'
  ports:
    containerPort: 3000
    hostPort: 8081

imagePullSecrets: []
nameOverride: "node-app-chart"
fullnameOverride: "node-app-chart"


serviceAccount:
  create: true
  annotations: {}
  name: "node-app-chart"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8081
  targetPort: 3000

ingress:
  enabled: true
  className: nginx
  # annotations: {
  #   kubernetes.io/ingress.class: nginx
  # }
  hosts:
    - host: node-app.local
      paths:
        - path: /
          pathType: Prefix

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  architecture: standalone
  auth:
    enabled: false

tests:
  image: 
    name: docker.io/library/node-test:latest
    env:
      name: 'REDIS_URL'
      value: 'node-app-chart-redis-master'
  app:
    host: node-app.local